<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo部署增强篇</title>
      <link href="/2022/09/28/hexo-bu-shu-zeng-qiang-pian/"/>
      <url>/2022/09/28/hexo-bu-shu-zeng-qiang-pian/</url>
      
        <content type="html"><![CDATA[<h2 id="各种部署方式"><a href="#各种部署方式" class="headerlink" title="各种部署方式"></a>各种部署方式</h2><blockquote><p>静态博客的部署方式多种多样，免费部署资源非常多。</p><p>如果DNS支持多线路，还可以设置多路负载均衡！</p><p>注意：这些免费的部署都没法做ICP备案，或者国内CDN套着备案。不过，都免费了，你还要求那么多？</p></blockquote><table><thead><tr><th align="center">部署方式</th><th align="center">费用</th><th align="center">难易度</th><th align="center">多域名</th></tr></thead><tbody><tr><td align="center">Github</td><td align="center">0￥</td><td align="center">简单</td><td align="center">单域名</td></tr><tr><td align="center">VPS</td><td align="center">2~5$&#x2F;M</td><td align="center">复杂</td><td align="center">支持</td></tr><tr><td align="center">Vercel</td><td align="center">0￥</td><td align="center">简单</td><td align="center">支持</td></tr><tr><td align="center">Cloudflare pages</td><td align="center">0￥</td><td align="center">简单</td><td align="center">支持</td></tr><tr><td align="center">Gitlab</td><td align="center">0￥</td><td align="center">简单</td><td align="center">支持（？）</td></tr></tbody></table><blockquote><p>Github可以通过同样代码仓库，多个仓库同时部署，不同仓库设置不同的域名来支持多域名！</p></blockquote><blockquote><p>Tips: <code>Github</code>有每个账户1000个仓库限制，每个仓库大小超过1G，就会被人工审查！所以撸羊毛可以，注意仓库个数和大小限制！</p></blockquote><h3 id="GitHub-Pages"><a href="#GitHub-Pages" class="headerlink" title="GitHub Pages"></a>GitHub Pages</h3><ul><li>速度：尚可，并不很慢，但有时候会抽风。</li><li>自定义域名：一个。</li><li>限制：</li><li><ul><li>单个文件大于50MB将受到警告。</li><li>单个文件大于100MB无法上传。</li><li>仓库大小「强烈建议」少于1GB。</li><li>每小时可构建10次。</li><li>每月流量100GB。<br>详情可见：<a href="https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages%23guidelines-for-using-github-pages">https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages#guidelines-for-using-github-pages</a></li></ul></li></ul><blockquote><ul><li>优点：简单方便</li><li>缺点：国内速度慢，直连CNAME会泄露GitHub用户名，免费版私有仓库无法使用</li></ul></blockquote><h3 id="Netlify"><a href="#Netlify" class="headerlink" title="Netlify"></a>Netlify</h3><p><strong>控制台无法访问。</strong></p><ul><li>部署方式：GitHub、GitLab、BitBucket仓库自动拉取以及本地CLI直接推送。</li><li>速度：较GitHub Pages要快，但是稳定性差上不少，部分时候可能直接出现无法访问。</li><li>自定义域名：多个。</li><li>限制：<br>对于每个账户：</li><li><ul><li>同时只能构建一个站点。</li><li>每月流量100GB。</li><li>每月构建时间300分钟。<br>详情可见：<a href="https://www.netlify.com/pricing">https://www.netlify.com/pricing</a></li></ul></li></ul><blockquote><ul><li>优点：pr单独部署，速度还可以，有免费的serverless</li><li>缺点：直连CNAME会泄露分配域名</li><li>对比Vercel，Netlify在国内的速度确实要比Vercel慢很多，但前者有许多后者没有的服务或插件，比如Algolia、表单等等</li></ul></blockquote><h3 id="Cloudflare-Pages"><a href="#Cloudflare-Pages" class="headerlink" title="Cloudflare Pages"></a>Cloudflare Pages</h3><ul><li>部署方式：GitHub仓库。</li><li>速度：与GitHub Pages相似。</li><li>自定义域名：最多10个；</li><li>限制：</li><li><ul><li>每月构可构建500次。</li><li>文件数量最多2w个。</li><li>单个文件大小不得超过25MB。<br>详情可见：<a href="https://developers.cloudflare.com/pages/platform/limits">https://developers.cloudflare.com/pages/platform/limits</a></li></ul></li></ul><h3 id="Vercel"><a href="#Vercel" class="headerlink" title="Vercel"></a>Vercel</h3><ul><li>部署方式：与Netlify相同，支持GitHub、GitLab、BitBucket仓库自动拉取以及本地CLI直接推送。</li><li>速度：在所有方案中最快且最稳定。</li><li>自定义域名：多个。</li><li>限制：</li><li><ul><li>每日可构建100次，但每小时不超过32次。</li><li>单个Git仓库支持连接3个Vercel项目。</li><li>每次构建时长最多45min。每月总计不超过100h。</li><li>每月带宽100次。<br>详情可见：<a href="https://vercel.com/docs/platform/limits">https://vercel.com/docs/platform/limits</a></li></ul></li></ul><blockquote><ul><li>优点：pr单独部署，速度快，CNAME无隐私问题，有免费的serverless</li><li>缺点：嗯，免费的能做到这样还指望啥？</li></ul></blockquote><h3 id="Cloudflare-CDN"><a href="#Cloudflare-CDN" class="headerlink" title="Cloudflare CDN"></a><em>Cloudflare CDN</em></h3><p><strong>Cloudflare CDN本身并非博客托管服务，但是可以与上文任意一个服务进行搭配。</strong></p><p>使用CF CDN时访问速度大多数时候较快，遇高峰期将减速。总体来说速度不如Vercel。稳定性尚可，但曾出现过无法访问的情况。</p><p>最主要的是将获得非常多的扩展功能，如HSTS、访问限制，以及HTTP&#x2F;3等前沿网络技术。他们对IETF的跟进是很快的。同时还会获得DDoS清洗、网站分析等服务。</p><blockquote><p>注意，套上CF CDN之后，可能访问速度会下降，例如Vercel，CF pages</p><p>最佳方法是使用Vercel+CF Partner？不过现在能用的CF Partner几乎没有了</p></blockquote><h3 id="jsDelivr-CDN"><a href="#jsDelivr-CDN" class="headerlink" title="jsDelivr CDN"></a>jsDelivr CDN</h3><p><a href="https://www.jsdelivr.com/">官网</a></p><ul><li>支持 HTTPS，支持 HTTP2，提供 SRI</li><li>网宿、Fastly、Stackpath、Cloudflare Business Plan</li><li>非常丰富的国内节点</li><li>非常丰富的海外节点</li><li>全球的速度都非常优秀</li><li><code>cdn.jsdelivr.net</code>，NS1 和 Rage4 主从 DNS</li><li>便捷性：★★★★★</li></ul><p>jsDelivr 支持从 NPM、GitHub Tag 和 WordPress SVN 上抓取文件并分发，大大降低了开发者使用的难度——直接发个 Release 就可以用了。jsDelivr 每个月会被调用上百亿次，服务 620+ TB 的流量，意味着如果你不是通过 jsDelivr 加载较为热门的库，那么缓存命中率是不会太理想的。</p><blockquote><p>公用库采用jsDelivr加速，自定义修改的js，css使用自己的部署服务</p></blockquote><p><a href="https://blog.skk.moe/post/public-cdn-in-diffrent-views/">其它CDN测评</a></p><h3 id="VPS"><a href="#VPS" class="headerlink" title="VPS"></a>VPS</h3><p>一句话，VPS的超能力就是有钱。配置更好的服务器速度更快，对国内外来说，地理位置最理想的是香港VPS。当然，价格也是相当感人！</p><blockquote><ul><li>优点：钱越多，速度越快。自定义性最高，想做什么服务都可以</li><li>缺点：很花钱，网站较大时考虑这个。不够稳定，要稳定性就要多点部署，需要自己维护服务器</li></ul></blockquote><h2 id="Hexo-Docker-本地部署"><a href="#Hexo-Docker-本地部署" class="headerlink" title="Hexo Docker 本地部署"></a>Hexo Docker 本地部署</h2><p>在最前面的篇章介绍了Hexo Docker 环境的使用方法。具体使用方法见本文系列<a href="https://blog.17lai.site/posts/40300608/#Hexo-Docker%E7%8E%AF%E5%A2%83%E4%BD%BF%E7%94%A8%E7%AF%87"><strong>Hexo Docker 环境篇</strong></a>。</p><p>优点：本地使用可定制化成都更高</p><p>缺点：必须要有Docker 环境。异地使用麻烦，除非ssh,vpn等远程链接方法。</p><h2 id="Hexo-Docker-VPS-部署"><a href="#Hexo-Docker-VPS-部署" class="headerlink" title="Hexo Docker VPS 部署"></a>Hexo Docker VPS 部署</h2><p>和 Hexo Docker 本地部署基本一样，最后反向代理设置域名。</p><p>具体参考 <a href="https://blog.17lai.site/posts/40300608/#Hexo-Docker%E7%8E%AF%E5%A2%83%E4%BD%BF%E7%94%A8%E7%AF%87"><strong>Hexo Docker 环境篇</strong></a></p><h2 id="将Hexo部署到VPS实现自动发布"><a href="#将Hexo部署到VPS实现自动发布" class="headerlink" title="将Hexo部署到VPS实现自动发布"></a>将Hexo部署到VPS实现自动发布</h2><h3 id="搭建流程"><a href="#搭建流程" class="headerlink" title="搭建流程"></a>搭建流程</h3><ol><li>服务器环境配置，安装Git、Nginx配置、创建git用户</li><li>本地hexo初始化</li><li>使用Git自动部署并发布博客</li></ol><h3 id="服务器环境搭建"><a href="#服务器环境搭建" class="headerlink" title="服务器环境搭建"></a>服务器环境搭建</h3><ul><li><strong>安装Git和NodeJS(Centos环境)</strong></li></ul><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install git</span><br><span class="line"><span class="comment"># 安装NodeJS </span></span><br><span class="line">curl --silent --location https://rpm.nodesource.com/setup_5.x | bash -</span><br></pre></td></tr></table></figure><ul><li><strong>创建git账号</strong></li></ul><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">adduser git</span><br><span class="line"><span class="built_in">chmod</span> 740 /etc/sudoers</span><br><span class="line">vim /etc/sudoers</span><br></pre></td></tr></table></figure><ul><li>添加内容<br>找到</li></ul><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Allow root to run any commands anywhere</span></span><br><span class="line">root    ALL=(ALL)     ALL</span><br></pre></td></tr></table></figure><ul><li>添加以下内容</li></ul><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git     ALL=(ALL)     ALL</span><br></pre></td></tr></table></figure><ul><li>保存退出并改回权限</li></ul><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 400 /etc/sudoers</span><br></pre></td></tr></table></figure><ul><li>设置git账号密码</li></ul><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd git</span><br></pre></td></tr></table></figure><ul><li>使用<code>su git</code>切换到git用户，再执行下列操作：</li></ul><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 切换到git用户目录</span></span><br><span class="line"><span class="built_in">cd</span> /home/git</span><br><span class="line"><span class="comment"># 创建.ssh文件夹</span></span><br><span class="line"><span class="built_in">mkdir</span> ~/.ssh</span><br><span class="line"><span class="comment"># 创建authorized_keys文件并编辑</span></span><br><span class="line">vim ~/.ssh/authorized_keys</span><br><span class="line"><span class="comment"># 如果你还没有生成公钥，那么首先在本地电脑中执行 cat ~/.ssh/id_rsa.pub | pbcopy生成公钥</span></span><br><span class="line"><span class="comment"># 再将公钥复制粘贴到authorized_keys</span></span><br><span class="line"><span class="comment"># 保存关闭authorized_keys后，修改相应权限</span></span><br><span class="line"><span class="built_in">chmod</span> 600 ~/.ssh/authorized_keys</span><br><span class="line"><span class="built_in">chmod</span> 700 ~/.ssh</span><br></pre></td></tr></table></figure><ul><li>然后可以通过本地Git Bash执行ssh命令测试是否可以免密登录</li></ul><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -v git@服务器ip地址</span><br></pre></td></tr></table></figure><p>这样git用户就添加好了。</p><blockquote><p>Tips: 将公钥拷贝到服务器的~&#x2F;.ssh&#x2F;authorized_keys文件中方法有如下几种：</p><ol><li>将公钥通过scp拷贝到服务器上，然后追加到<del>&#x2F;.ssh&#x2F;authorized_keys文件中，这种方式比较麻烦。scp -P 22 ~&#x2F;.ssh&#x2F;id_rsa.pub user@host:</del>&#x2F;。</li><li>通过ssh-copy-id程序，就是我演示的方法，ssh-copyid user@host即可</li><li>可以通过<code>cat ~/.ssh/id_rsa.pub | ssh username@host &quot;mkdir ~/.ssh; cat &gt;&gt; ~/.ssh/authorized_keys&quot;</code>，这个也是比较常用的方法，因为可以更改端口号。</li></ol></blockquote><ul><li><strong>安装Nginx</strong></li><li>准备工作<br>首先由于nginx的一些模块依赖一些lib库，所以在安装nginx之前，必须先安装这些lib库，这些依赖库主要有g++、gcc、openssl-devel、pcre-devel和zlib-devel 所以执行如下命令安装</li></ul><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc-c++</span><br><span class="line">yum install pcre pcre-devel</span><br><span class="line">yum install zlib zlib-devel</span><br><span class="line">yum install openssl openssl--devel</span><br></pre></td></tr></table></figure><p>Ubuntu系统安装命令如下：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libpcre3 libpcre3-dev</span><br><span class="line">sudo apt-get install zlib1g-dev</span><br><span class="line">sudo apt-get install openssl libssl-dev</span><br></pre></td></tr></table></figure><ul><li>安装Nginx<br>安装之前，最好检查一下是否已经安装有nginx</li></ul><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find -name nginx</span><br></pre></td></tr></table></figure><p>如果系统已经安装了nginx，那么就先卸载</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum remove nginx</span><br></pre></td></tr></table></figure><p>然后开始安装<br>首先进入<code>/usr/local</code>目录</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local</span><br></pre></td></tr></table></figure><p>从官网下载最新版的nginx</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -c https://nginx.org/download/nginx-1.14.2.tar.gz </span><br></pre></td></tr></table></figure><p>（注：版本号可更改，去官网查看最新版本号修改即可）</p><p>解压nginx压缩包</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf nginx-1.14.2.tar.gz</span><br></pre></td></tr></table></figure><p>会产生一个nginx-1.14.2 目录，这时进入nginx-1.14.2 目录</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span>  nginx-1.14.2</span><br></pre></td></tr></table></figure><p>接下来安装，使用–prefix参数指定nginx安装的目录,make、make install安装</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure</span><br></pre></td></tr></table></figure><p>（默认安装在&#x2F;usr&#x2F;local&#x2F;nginx，推荐使用默认设置）</p><p><img src="https://cimg1.17lai.site/data/2021/09/1220210912163925.png" alt="img"></p><p>none</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure><p><img src="https://cimg1.17lai.site/data/2021/09/1220210912163918.png" alt="img"></p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make install</span><br></pre></td></tr></table></figure><p><img src="https://cimg1.17lai.site/data/2021/09/1220210912163522.png" alt="img"></p><p>如果没有报错，顺利完成后，最好看一下nginx的安装目录</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whereis nginx</span><br></pre></td></tr></table></figure><p>（where和is要连这些，中间没有空格）</p><p><img src="https://cimg1.17lai.site/data/2021/09/1220210912163515.png" alt="img"></p><ul><li>启动和停止nginx</li></ul><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/nginx/sbin/</span><br><span class="line">./nginx </span><br><span class="line">./nginx -s stop</span><br><span class="line">./nginx -s quit</span><br><span class="line">./nginx -s reload</span><br><span class="line">./nginx -s quit: 此方式停止步骤是待nginx进程处理任务完毕进行停止。</span><br><span class="line">./nginx -s stop: 此方式相当于先查出nginx进程<span class="built_in">id</span>再使用<span class="built_in">kill</span>命令强制杀掉进程。</span><br></pre></td></tr></table></figure><p>查询nginx进程：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux | grep nginx</span><br></pre></td></tr></table></figure><p><img src="https://cimg1.17lai.site/data/2021/09/1220210912163454.png" alt="img"></p><ul><li>重启 nginx</li></ul><ol><li>先停止再启动（推荐）：<br>对 nginx 进行重启相当于先停止再启动，即先执行停止命令再执行启动命令。如下：</li></ol><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./nginx -s quit</span><br><span class="line">./nginx</span><br></pre></td></tr></table></figure><ol><li>重新加载配置文件：<br>当 nginx 的配置文件 nginx.conf 修改后，要想让配置生效需要重启 nginx，使用 -s reload 不用先停止 nginx 再启动 nginx 即可将配置信息在 nginx 中生效，如下：</li></ol><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./nginx -s reload</span><br></pre></td></tr></table></figure><p>启动成功后，在浏览器可以看到如下页面：</p><p><img src="https://cimg1.17lai.site/data/2021/09/1220210912163437.png" alt="img"></p><ul><li>开机自启动</li></ul><p>即在rc.local增加启动代码就可以了。</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/rc.local</span><br></pre></td></tr></table></figure><p>增加一行</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/nginx/sbin/nginx</span><br></pre></td></tr></table></figure><p>到这里，nginx安装完毕，启动、停止、重启操作也都完成。</p><h3 id="建立git裸库"><a href="#建立git裸库" class="headerlink" title="建立git裸库"></a>建立git裸库</h3><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 回到git目录</span></span><br><span class="line"><span class="built_in">cd</span> /home/git</span><br><span class="line"><span class="comment"># 使用git用户创建git裸仓库，以blog.git为例</span></span><br><span class="line">git init --bare blog.git</span><br></pre></td></tr></table></figure><h3 id="检查用户组权限"><a href="#检查用户组权限" class="headerlink" title="检查用户组权限"></a>检查用户组权限</h3><p>我们的git裸仓库已经建立好了，离成功又近了一步。为了以防万一，我们要检查一下之前的blog.git、.ssh、blog目录的用户组权限是否都为<code>git:git</code></p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 还记得/var/www/吗？这是之前配置nginx时，我们自己选定的网站根目录，请依据你自己的设置更改，如果没有的话自己</span></span><br><span class="line">ll -a /www/wwwroot/hexo</span><br><span class="line">ll -a /home/git/</span><br></pre></td></tr></table></figure><p>如果有哪个不是，执行下面相应的命令后再查看</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">chown</span> -R git:git /www/wwwroot/hexo</span><br><span class="line">sudo <span class="built_in">chmod</span> -R 755 /www/wwwroot/hexo</span><br><span class="line">sudo <span class="built_in">chown</span> git:git -R /home/git/blog.git</span><br></pre></td></tr></table></figure><h3 id="使用git-hooks同步网站根目录"><a href="#使用git-hooks同步网站根目录" class="headerlink" title="使用git-hooks同步网站根目录"></a>使用git-hooks同步网站根目录</h3><p>简单来说，我们使用一个钩子文件：post-receive，每当git仓库接收到内容的时候，就会自动调用这个钩子，把内容同步到网站根目录。<br>在git用户下执行：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 新建一个post-receive文件并编辑</span></span><br><span class="line">vim ~/blog.git/hooks/post-receive</span><br></pre></td></tr></table></figure><p>在里面输入以下内容，注意修改为自己的设置：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line">GIT_REPO=/home/git/blog.git</span><br><span class="line">TMP_GIT_CLONE=/tmp/blog</span><br><span class="line">PUBLIC_WWW=/www/wwwroot/hexo</span><br><span class="line"><span class="built_in">rm</span> -rf <span class="variable">$&#123;TMP_GIT_CLONE&#125;</span></span><br><span class="line">git <span class="built_in">clone</span> -b main <span class="variable">$GIT_REPO</span> <span class="variable">$TMP_GIT_CLONE</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$TMP_GIT_CLONE</span></span><br><span class="line"><span class="comment">#for b in `git branch -r | grep -v -- &#x27;-&gt;&#x27;`; do git branch --track $&#123;b##origin/&#125; $b; done</span></span><br><span class="line"><span class="comment">#git checkout main</span></span><br><span class="line"><span class="built_in">rm</span> -rf <span class="variable">$&#123;PUBLIC_WWW&#125;</span>/*</span><br><span class="line"><span class="built_in">cp</span> -rf <span class="variable">$&#123;TMP_GIT_CLONE&#125;</span>/* <span class="variable">$&#123;PUBLIC_WWW&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;update web done!&quot;</span></span><br><span class="line"><span class="comment">#ls -al $&#123;PUBLIC_WWW&#125;</span></span><br><span class="line"><span class="built_in">rm</span> -rf <span class="variable">$&#123;TMP_GIT_CLONE&#125;</span></span><br></pre></td></tr></table></figure><p>保存退出后，执行以下赋予这个文件可执行权限。</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chown</span> -R git:git ~/blog.git/hooks/post-receive</span><br><span class="line"><span class="built_in">chmod</span> +x ~/blog.git/hooks/post-receive</span><br></pre></td></tr></table></figure><p>好了，以上就是服务器端需要配置的内容。我们还差最后一步就可以完成整个部署了！</p><h3 id="修改配置文件nginx-conf"><a href="#修改配置文件nginx-conf" class="headerlink" title="修改配置文件nginx.conf"></a>修改配置文件nginx.conf</h3><p>修改上面的配置文件：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/local/nginx/conf/nginx_config</span><br></pre></td></tr></table></figure><h3 id="然后修改其中两个部分，如下所示："><a href="#然后修改其中两个部分，如下所示：" class="headerlink" title="然后修改其中两个部分，如下所示："></a>然后修改其中两个部分，如下所示：</h3><p><img src="https://cimg1.17lai.site/data/2021/09/1220210912163900.jpeg" alt="img"></p><p>然后<code>重启nginx</code>，方法见<code>nginx安装</code>部分。</p><h3 id="配置本地Hexo的-config-yml"><a href="#配置本地Hexo的-config-yml" class="headerlink" title="配置本地Hexo的_config.yml"></a>配置本地Hexo的<code>_config.yml</code></h3><p>非常简单，只需要找到本地Hexo博客的站点配置文件<code>_config.yml</code>，找到以下内容并修改：</p><p>yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span> </span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@你的服务器IP:/home/git/blog.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>保存后，剩下的就是Hexo的日常操作了，这里就不赘述了，写完文章后，在你的本地博客根目录执行以下命令：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo c &amp;&amp; hexo g -d</span><br></pre></td></tr></table></figure><p>就可以实现线上博客的自动更新了！一切搞定！</p><h2 id="Rsync同步部署静态文件方法"><a href="#Rsync同步部署静态文件方法" class="headerlink" title="Rsync同步部署静态文件方法"></a>Rsync同步部署静态文件方法</h2><blockquote><p>使用rsync同步</p></blockquote><p>本地生成静态文件后rsync同步到vps网页目录，lnap使用宝塔配置，这里只需要一个nginx。</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rsync [options] from_dir to_dir</span></span><br><span class="line"><span class="comment"># 替换这里的ip为你的服务器ip</span></span><br><span class="line">rsync -avzP  /home/17lai.blog  root@8.8.8.8:/www/wwwroot/hexo</span><br></pre></td></tr></table></figure><h2 id="Hexo-Github-Action-自动部署"><a href="#Hexo-Github-Action-自动部署" class="headerlink" title="Hexo Github Action 自动部署"></a>Hexo Github Action 自动部署</h2><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ol><li><code>Hexo</code> 博客源码的仓库，在 <code>GitHub</code> 上。</li><li><code>ssh</code> 密钥，参考文章：<a href="https://sitoi.cn/posts/43508.html">Windows 下利用 Git 生成 SSH KEY 并配置到 GitHub</a></li></ol><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ol><li>为需要部署的平台添加密钥</li><li>修改 <code>_config.yml</code> 中的 <code>deploy</code> 配置</li><li>在 GitHub 上设置 <code>Secrets</code></li><li>创建 GitHub Action</li></ol><h3 id="为需要部署的平台添加密钥"><a href="#为需要部署的平台添加密钥" class="headerlink" title="为需要部署的平台添加密钥"></a>为需要部署的平台添加密钥</h3><p>按照之前的教程，只要你之前成功将 Hexo 的博客部署到 GitHub 上，那你电脑在 <code>~/.ssh</code> 目录下一定有以下三个文件：</p><ul><li><code>id_rsa</code>：私钥</li><li><code>id_rsa.pub</code>：公钥</li><li><code>known_hosts</code>：记录对所有用户都可信赖的远程主机的公钥</li></ul><p>将 <code>id_rsa.pub</code>（公钥）添加到不同平台中即可，参考文章：<a href="https://sitoi.cn/posts/43508.html#%E6%9F%A5%E7%9C%8B-SSH-KEY">Windows 下利用 Git 生成 SSH KEY 并配置到 GitHub</a></p><p>下面是不同平台添加的地址：</p><ul><li><a href="https://github.com/settings/ssh/new">GitHub</a></li><li><a href="https://gitlab.com/profile/keys">GitLab</a></li><li><a href="https://e.coding.net/">Coding</a></li><li><a href="https://gitee.com/profile/sshkeys">Gitee</a></li></ul><h3 id="修改-config-yml-中的-deploy-配置"><a href="#修改-config-yml-中的-deploy-配置" class="headerlink" title="修改 _config.yml 中的 deploy 配置"></a>修改 <code>_config.yml</code> 中的 <code>deploy</code> 配置</h3><p>请使用 <code>ssh</code> (即以 <code>git@</code> 开头的 <code>clone</code> 链接) 的连接方式，根据直接的实际地址填写。</p><p>yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repo:</span></span><br><span class="line">      <span class="attr">github:</span> <span class="string">git@github.com:Sitoi/Sitoi.github.io.git</span></span><br><span class="line">      <span class="attr">coding:</span> <span class="string">git@e.coding.net:Sitoi/Sitoi.git</span></span><br><span class="line">      <span class="attr">gitee:</span> <span class="string">git@gitee.com:sitoi/sitoi.git</span></span><br><span class="line">      <span class="attr">gitlab:</span> <span class="string">git@gitlab.com:Sitoi/sitoi.gitlab.io.git</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><h3 id="在-GitHub-上设置-Secrets"><a href="#在-GitHub-上设置-Secrets" class="headerlink" title="在 GitHub 上设置 Secrets"></a>在 GitHub 上设置 <code>Secrets</code></h3><ol><li>进入到你在 <code>GitHub</code> 上面的源码仓库</li><li>点击右上角的 <code>Settings</code></li></ol><p><img src="https://cimg1.17lai.site/data/2021/10/1220211012133009.png" alt="Settings"></p><p><strong>Settings</strong></p><p>Settings</p><ol><li>点击左侧的 <code>Secrets</code></li><li>点击右上角的 <code>New secret</code></li></ol><p><img src="https://cimg1.17lai.site/data/2021/10/1220211012133002.png" alt="New secret"></p><p><strong>New secret</strong></p><p>New secret</p><ol><li>在 <code>Name</code> 中输入 <code>HEXO_DEPLOY_PRI</code>，在 <code>Value</code> 中填入 <code>id_rsa</code>（私钥）的全部内容</li></ol><p><img src="https://cimg1.17lai.site/data/2021/10/1220211012132955.png" alt="Add secret"></p><p><strong>Add secret</strong></p><p>Add secret</p><h3 id="创建-GitHub-Action"><a href="#创建-GitHub-Action" class="headerlink" title="创建 GitHub Action"></a>创建 GitHub Action</h3><ol><li>点击项目上方的 <code>Action</code> 按钮</li></ol><p><img src="https://cimg1.17lai.site/data/2021/10/1220211012132954.png" alt="Action"></p><p><strong>Action</strong></p><p>Action</p><ol><li>点击 <code>set up a workflow yourself</code> 创建 <code>Workflow</code></li></ol><p><img src="https://cimg1.17lai.site/data/2021/10/1220211012132947.png" alt="Workflow"></p><p><strong>Workflow</strong></p><p>Workflow</p><ol><li>修改 <code>main.yaml</code> 的内容</li></ol><p><img src="https://cimg1.17lai.site/data/2021/10/1220211012132940.png" alt="Create Workflow"></p><p><strong>Create Workflow</strong></p><p>Create Workflow</p><blockquote><p>根据实际情况修改成你自己的内容</p></blockquote><ul><li>Git 推送使用的用户名：git config –global <a href="http://user.name/">user.name</a> ‘sitoi’：</li><li>Git 推送使用的邮箱：git config –global user.email ‘<a href="mailto:133397418@qq.com">133397418@qq.com</a>‘</li><li>Hexo 的版本：npm i <a href="mailto:hexo@4.1.1">hexo@4.1.1</a> -g</li></ul><p>yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Hexo</span> <span class="string">CI</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">butterfly</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">butterfly-build:</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">strategy:</span></span><br><span class="line">      <span class="attr">matrix:</span></span><br><span class="line">        <span class="attr">node-version:</span> [<span class="number">10.</span><span class="string">x</span>]</span><br><span class="line"></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v1</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Use</span> <span class="string">Node.js</span> <span class="number">10.</span><span class="string">x</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&#x27;10.x&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">env</span> <span class="string">prepare</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="attr">HEXO_DEPLOY_PRI:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.HEXO_DEPLOY_PRI</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          mkdir -p ~/.ssh/</span></span><br><span class="line"><span class="string">          echo &quot;$HEXO_DEPLOY_PRI&quot; &gt; ~/.ssh/id_rsa</span></span><br><span class="line"><span class="string">          chmod 600 ~/.ssh/id_rsa</span></span><br><span class="line"><span class="string">          ssh-keyscan github.com &gt;&gt; ~/.ssh/known_hosts</span></span><br><span class="line"><span class="string">          ssh-keyscan gitlab.com &gt;&gt; ~/.ssh/known_hosts</span></span><br><span class="line"><span class="string">          ssh-keyscan e.coding.net &gt;&gt; ~/.ssh/known_hosts</span></span><br><span class="line"><span class="string">          ssh-keyscan gitee.com &gt;&gt; ~/.ssh/known_hosts</span></span><br><span class="line"><span class="string">          git config --global user.name &#x27;sito&#x27;</span></span><br><span class="line"><span class="string">          git config --global user.email &#x27;133397418@qq.com&#x27;</span></span><br><span class="line"><span class="string">          npm i</span></span><br><span class="line"><span class="string">          npm i hexo@4.1.1 -g</span></span><br><span class="line"><span class="string"></span>      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">gen</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          hexo clean</span></span><br><span class="line"><span class="string">          hexo generate</span></span><br><span class="line"><span class="string">          hexo deploy</span></span><br></pre></td></tr></table></figure><ol><li>将你的源码推送到 <code>GitHub</code> 上，你的博客一会就会自动更新了。</li></ol><h2 id="Hexo-Gitlab-CI-x2F-CD自动部署"><a href="#Hexo-Gitlab-CI-x2F-CD自动部署" class="headerlink" title="Hexo Gitlab CI&#x2F;CD自动部署"></a>Hexo Gitlab CI&#x2F;CD自动部署</h2><p>啥都不说，直接上代码，请参考 Gitlab 官方项目 <a href="https://gitlab.com/pages/hexo">Gitlab hexo</a></p><p>更多关于 Gitlab CICD 介绍，请看下面文章</p><blockquote><p><a href="https://blog.17lai.site/posts/1879721e/">CI&#x2F;CD与Git Flow与GitLab</a></p></blockquote><h2 id="vercel-部署"><a href="#vercel-部署" class="headerlink" title="vercel 部署"></a>vercel 部署</h2><blockquote><p>jsdelivr被封了，怎么办？vercel 部署可以加速访问</p></blockquote><h3 id="为什么使用-vercel"><a href="#为什么使用-vercel" class="headerlink" title="为什么使用 vercel"></a>为什么使用 vercel</h3><ul><li>国内 <code>Github Pages</code> 速度较慢。</li><li><code>vercel</code> 速度快且能够自定义域名，能实现和 <code>Github Pages</code> 一样的效果</li></ul><blockquote><p>vercel 官方地址：<a href="https://vercel.com/">vercel.com&#x2F;</a></p></blockquote><h3 id="如何部署"><a href="#如何部署" class="headerlink" title="如何部署"></a>如何部署</h3><ul><li>首先注册一个账号</li><li>注册成功后进入页面，点击 <code>News Project</code></li></ul><p><img src="https://cimg1.17lai.site/data/2022/09/04/20220904114329.webp" alt="img"></p><p><strong>img</strong></p><ul><li>然后通过绑定的 <code>github</code> 或者 <code>gitlab</code> 导入需要部署的项目</li></ul><p><img src="https://cimg1.17lai.site/data/2022/09/04/20220904114329-1.webp" alt="img"></p><p><strong>img</strong></p><ul><li>如果导入的项目是打包好的静态页，在 <code>Build and Output Settings</code> 的 <code>override</code> 都勾上，表示不执行它的默认命令。</li></ul><p><img src="https://cimg1.17lai.site/data/2022/09/04/20220904114329-2.webp" alt="img"></p><p><strong>img</strong></p><ul><li>点击 <code>deployed</code> 进行部署，如果部署失败可以查看报错信息是不是上一步的某些选项没有覆盖。部署成功后会进入如图所示的界面</li></ul><p><img src="https://cimg1.17lai.site/data/2022/05/17/20220517211315.webp" alt="img"></p><p><strong>img</strong></p><h3 id="如何自定义域名"><a href="#如何自定义域名" class="headerlink" title="如何自定义域名"></a>如何自定义域名</h3><ul><li>腾讯云域名地址：<a href="https://console.cloud.tencent.com/domain">console.cloud.tencent.com&#x2F;domain</a></li><li><code>vercel</code> 静态页挂载地址：</li><li>进入到 setting 中可对项目进行一些设置，如项目名称</li></ul><p><img src="https://cimg1.17lai.site/data/2022/05/17/20220517211622.webp" alt="vercel 自定义域名"></p><p><strong>vercel 自定义域名</strong></p><ul><li>下面演示如何自定义域名，默认情况下部署成功后 <code>vercel</code> 会给你生成一个默认的域名，如果想要修改成自己的域名可将域名名称修改成自己的。</li><li>当选择修改成自己的域名名称后，<code>vercel</code> 会检查域名指向的 <code>DNS</code> 对不对，如果不对的话会提示你域名的 DNS 应该如何配置，按照 <code>vercel</code> 提示的 <code>DNS</code> 信息</li></ul><p>在自己的域名的 <code>DNS</code> 配置中进行配置，如图</p><p><img src="https://cimg1.17lai.site/data/2022/05/17/20220517205923-5.webp" alt="img"></p><p><strong>img</strong></p><h3 id="配置多个域名"><a href="#配置多个域名" class="headerlink" title="配置多个域名"></a>配置多个域名</h3><p>对其他新增的域名选择重定向到自己的主域名即可</p><p><img src="https://cimg1.17lai.site/data/2022/05/17/20220517211716.webp" alt="vercel 多域名配置"></p><p><strong>vercel 多域名配置</strong></p><h3 id="自定义Header缓存时间"><a href="#自定义Header缓存时间" class="headerlink" title="自定义Header缓存时间"></a>自定义Header缓存时间</h3><blockquote><p><a href="https://vercel.com/docs/project-configuration#project-configuration/headers">vercel.com&#x2F;docs</a></p><p><strong>使用Vercel必备配置，本地缓存加速访问！</strong></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vercel.json</span><br></pre></td></tr></table></figure><p>json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;headers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;source&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/sw.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;headers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Cache-Control&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;public, max-age=0, must-revalidate&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;source&quot;</span><span class="punctuation">:</span> <span class="string">&quot;(.*)&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;headers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Cache-Control&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;public, s-maxage=86400, max-age=86400&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="Vercel自定义404"><a href="#Vercel自定义404" class="headerlink" title="Vercel自定义404"></a>Vercel自定义404</h3><blockquote><p><a href="https://vercel.com/guides/custom-404-page">learn how to customize the 404 page</a>.</p></blockquote><h2 id="cloudflare-Pages-部署"><a href="#cloudflare-Pages-部署" class="headerlink" title="cloudflare Pages 部署"></a>cloudflare Pages 部署</h2><p>jsdelivr被封了，怎么办？cloudflare Pages 部署可以加速访问</p><blockquote><p><strong>强烈推荐！</strong></p><p>全球CDN，静态加速，可以说是最佳部署方案！就是有每日100000次请求限制！可以使用dnspod多线路负载均衡来帮助分流。</p></blockquote><blockquote><p>官网 <a href="https://dash.cloudflare.com/">cloudflare </a>首先注册一个账号</p></blockquote><p><img src="https://cimg1.17lai.site/data/2022/05/17/20220517210709.webp" alt="cloudflare"></p><p><strong>cloudflare</strong></p><p><img src="https://cimg1.17lai.site/data/2022/05/17/20220517210803.webp" alt="cloudflare page 连接 github"></p><p><strong>cloudflare page 连接 github</strong></p><p><img src="https://cimg1.17lai.site/data/2022/05/17/20220517210852.webp" alt="cloudflare page 选择仓库"></p><p><strong>cloudflare page 选择仓库</strong></p><p><img src="https://cimg1.17lai.site/data/2022/05/17/20220517211145.webp" alt="cloudflare page 自定义域名"></p><p><strong>cloudflare page 自定义域名</strong></p><blockquote><p>错过了CloudFlare Partner的时代，官方的CloudFlare for SaaS也提供了一种更灵活的CNAME接入方式</p><p><a href="https://blog.cloudflare.com/zh-cn/waf-for-saas-zh-cn/">https://blog.cloudflare.com/zh-cn/waf-for-saas-zh-cn/</a></p></blockquote><h2 id="以-token-方式部署到-Github"><a href="#以-token-方式部署到-Github" class="headerlink" title="以 token 方式部署到 Github"></a>以 token 方式部署到 Github</h2><p>yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span></span><br><span class="line">    <span class="attr">github:</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">&lt;repository</span> <span class="string">url&gt;</span></span><br><span class="line">      <span class="attr">branch:</span> [<span class="string">branch</span>]</span><br><span class="line">      <span class="attr">token:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="attr">message:</span> [<span class="string">message</span>]</span><br><span class="line">  <span class="attr">name:</span> [<span class="string">git</span> <span class="string">user</span>]</span><br><span class="line">  <span class="attr">email:</span> [<span class="string">git</span> <span class="string">email</span>]</span><br><span class="line">  <span class="attr">extend_dirs:</span> [<span class="string">extend</span> <span class="string">directory</span>]</span><br><span class="line">  <span class="attr">ignore_hidden:</span> <span class="literal">false</span> <span class="comment"># default is true</span></span><br><span class="line">  <span class="attr">ignore_pattern:</span> <span class="string">regexp</span>  <span class="comment"># whatever file that matches the </span></span><br></pre></td></tr></table></figure><h2 id="travis-自动部署配置"><a href="#travis-自动部署配置" class="headerlink" title="travis 自动部署配置"></a>travis 自动部署配置</h2><blockquote><p>travis是第三方CICD服务，比action更加强大，下面只是参考，请查阅travis 文档，并结合自己的环境修改！</p></blockquote><p>yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sudo:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">node_js</span></span><br><span class="line"><span class="attr">node_js:</span></span><br><span class="line"><span class="bullet">-</span> <span class="number">10.16</span><span class="number">.3</span></span><br><span class="line"><span class="attr">cache:</span> <span class="string">npm</span></span><br><span class="line"><span class="attr">branches:</span></span><br><span class="line">  <span class="attr">only:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">master</span> <span class="comment"># build master branch only</span></span><br><span class="line"></span><br><span class="line"><span class="attr">env:</span></span><br><span class="line">  <span class="attr">global:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">GIT_USER:</span> <span class="string">appotry</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">HEXO_BACKUP_REPO:</span> <span class="string">github.com/appotry/hexo-backup.git</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">HEXO_THEME_REPO:</span> <span class="string">github.com/appotry/hexo-theme-matery.git</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">GITHUB_PAGES_REPO:</span> <span class="string">github.com/appotry/hexo.github.io.git</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">APPOTRY_REPO:</span> <span class="string">github.com/appotry/hexo.git</span></span><br><span class="line"></span><br><span class="line"><span class="attr">before_install:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">export</span> <span class="string">TZ=&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">hexo</span> <span class="string">-g</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">gulp-cli</span> <span class="string">-g</span></span><br><span class="line"></span><br><span class="line"><span class="attr">install:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">npm</span> <span class="string">install</span></span><br><span class="line"></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">git</span> <span class="string">clone</span> <span class="string">https://$&#123;HEXO_THEME_REPO&#125;</span> <span class="string">themes/next</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">git</span> <span class="string">clone</span> <span class="string">https://$&#123;GIT_USER&#125;:$&#123;GITHUB_TOKEN&#125;@$&#123;HEXO_BACKUP_REPO&#125;</span> <span class="string">hexo-backup</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">mv</span> <span class="string">hexo-backup/source</span> <span class="string">.</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">rm</span> <span class="string">-rf</span> <span class="string">source/private</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">npm</span> <span class="string">run</span> <span class="string">build</span></span><br><span class="line"></span><br><span class="line"><span class="attr">after_success:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.name</span> <span class="string">&quot;appotry&quot;</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.email</span> <span class="string">&quot;email@qq.com&quot;</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">git</span> <span class="string">clone</span> <span class="string">https://$&#123;GIT_USER&#125;:$&#123;GITHUB_TOKEN&#125;@$&#123;GITHUB_PAGES_REPO&#125;</span> <span class="string">voidking</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">unalias</span> <span class="string">cp</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">cp</span> <span class="string">-rf</span> <span class="string">public/.</span> <span class="string">17lai.blog</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">cd</span> <span class="string">17lai.blog</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">git</span> <span class="string">add</span> <span class="string">.</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">git</span> <span class="string">commit</span> <span class="string">-m</span> <span class="string">&quot;Travis CI Auto Builder&quot;</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">git</span> <span class="string">push</span> <span class="string">--force</span> <span class="string">--quiet</span> <span class="string">&quot;https://$&#123;GIT_USER&#125;:$&#123;GITHUB_TOKEN&#125;@$&#123;GITHUB_PAGES_REPO&#125;&quot;</span> <span class="string">master:master</span></span><br></pre></td></tr></table></figure><h2 id="利用-GitLab-实现-Hexo-博客的-CI-x2F-CD"><a href="#利用-GitLab-实现-Hexo-博客的-CI-x2F-CD" class="headerlink" title="利用 GitLab 实现 Hexo 博客的 CI&#x2F;CD"></a>利用 GitLab 实现 Hexo 博客的 CI&#x2F;CD</h2><p>Portainer 提供了对服务在线更新的 WebHook，所以基于 GitLab 自带的 CI&#x2F;CD 功能实现 Hexo 博客的持续部署，就非常轻松了。</p><p>CI&#x2F;CD 其实本质上是一套流程，流程规则可以自行定义。在本文研究的主题下，流程分为三步：第一步是编译 Hexo 博客并生成静态文件；第二步是将静态文件打包成可提供 Web 服务的镜像；第三步则是通过 Portainer 的钩子触发服务更新。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.gitlab-ci.yml</span><br></pre></td></tr></table></figure><p>yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">stages:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">compile</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">build</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">deploy</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># CONTAINER_RELEASE_IMAGE 根据自己的仓库名修改</span></span><br><span class="line"><span class="attr">variables:</span></span><br><span class="line">  <span class="attr">DOCKER_HOST:</span> <span class="string">tcp://docker:2375</span></span><br><span class="line">  <span class="attr">DOCKER_DRIVER:</span> <span class="string">overlay2</span></span><br><span class="line">  <span class="attr">CONTAINER_RELEASE_IMAGE:</span> <span class="string">registry.gitlab.com/xxx/xxx:latest</span></span><br><span class="line"></span><br><span class="line"><span class="attr">compile:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">compile</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">node:lts-alpine</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">npm</span> <span class="string">install</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">./node_modules/hexo/bin/hexo</span> <span class="string">generate</span></span><br><span class="line">  <span class="attr">artifacts:</span></span><br><span class="line">    <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">public/</span></span><br><span class="line">    <span class="attr">expire_in:</span> <span class="number">20</span> <span class="string">minutes</span></span><br><span class="line"></span><br><span class="line"><span class="attr">build:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">build</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">docker:stable</span></span><br><span class="line">  <span class="attr">services:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker:dind</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker</span> <span class="string">login</span> <span class="string">-u</span> <span class="string">gitlab-ci-token</span> <span class="string">-p</span> <span class="string">$CI_JOB_TOKEN</span> <span class="string">registry.gitlab.com</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker</span> <span class="string">info</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker</span> <span class="string">build</span> <span class="string">-f</span> <span class="string">./Dockerfile</span> <span class="string">-t</span> <span class="string">$CONTAINER_RELEASE_IMAGE</span> <span class="string">public</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker</span> <span class="string">push</span> <span class="string">$CONTAINER_RELEASE_IMAGE</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据自己的钩子修改下方的 URL</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">deploy</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">curl</span> <span class="string">https://xxx.xxx.xxx/api/webhooks/xxx</span> <span class="string">-X</span> <span class="string">POST</span></span><br></pre></td></tr></table></figure><p>为了保证服务更新的成功率，可以在 <code>deploy</code> 环节加个错误判断和重试次数，具体的看 GitLab 官方文档即可。</p><p>下面给出我的 Dockerfile 文件，供参考。</p><p>docker</p><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> nginx:alpine</span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> . /usr/share/nginx/html</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">chmod</span> 777 /usr/share/nginx/html -R \</span></span><br><span class="line"><span class="language-bash">    &amp;&amp; sed -i <span class="string">&#x27;s/#error_page  404/error_page  404/&#x27;</span> /etc/nginx/conf.d/default.conf</span></span><br></pre></td></tr></table></figure><h2 id="DNSPOD-多线路负载均衡"><a href="#DNSPOD-多线路负载均衡" class="headerlink" title="DNSPOD 多线路负载均衡"></a>DNSPOD 多线路负载均衡</h2><blockquote><p>DNSPOD官网 <a href="https://console.dnspod.cn/dns/list">console.dnspod.cn</a></p></blockquote><p><img src="https://cimg1.17lai.site/data/2022/05/17/20220517212142.webp" alt="dnspod"></p><p><strong>dnspod</strong></p><p><img src="https://cimg1.17lai.site/data/2022/05/17/20220517212323.webp" alt="dnspod 多线路负载均衡"></p><p><strong>dnspod 多线路负载均衡</strong></p><blockquote><p>dnspod对cname数目有限制。</p><p>这里使用权重来分配各条线路访问比例！</p></blockquote><h2 id="乒乓部署"><a href="#乒乓部署" class="headerlink" title="乒乓部署"></a>乒乓部署</h2><blockquote><p>也可以叫旋转门部署。</p><p>解决调试博客插件，修改半成品文章时部署到云端会影响正在查阅博客的用户的问题！</p><p>使用Docker版本本地预览是很不错，但是 jsdelivr 版本发布需要在 Github 生成新 release 这时本地就不行了。乒乓部署可以解决这个问题！</p></blockquote><p>具体方法就是同时部署到两个地方A和B，博客域名在两个服务器之间切换。这里以 Vercel 为例</p><h3 id="准备工作："><a href="#准备工作：" class="headerlink" title="准备工作："></a>准备工作：</h3><ul><li>创建2个Github仓库，对应服务器A和B的部署</li><li>建立两个服务器A和B，分别关联两个 Github 仓库</li><li>把调试完毕的代码上传到两个仓库</li><li>这时通过服务器A和B都是可以正常浏览的</li></ul><h3 id="要调试的时候："><a href="#要调试的时候：" class="headerlink" title="要调试的时候："></a>要调试的时候：</h3><ul><li>发布到A之前，把博客域名转移到服务器B</li><li>在服务A做一些调试，在线 debug 工作</li><li>特别是在线 <a href="https://pagespeed.web.dev/">pageseed</a> 测试调优，这种事必备方法。简单不需要新的 jsdelivr 版本调试本地 <a href="https://github.com/appotry/docker-hexo">docker-hexo</a> 调试即可！</li></ul><p><img src="https://cimg1.17lai.site/data/2022/08/20/20220820181601.webp" alt="输入想转移的域名"></p><p><strong>输入想转移的域名</strong></p><p><img src="https://cimg1.17lai.site/data/2022/08/20/20220820181557.webp" alt="点击确认转移域名"></p><p><strong>点击确认转移域名</strong></p><h3 id="调试完毕后："><a href="#调试完毕后：" class="headerlink" title="调试完毕后："></a>调试完毕后：</h3><ul><li>把域名切换到服务器A</li><li>同时部署到服务器B，服务器B同步A的部署内容，以便下次备用</li></ul><blockquote><p>总结就是服务器A现行，服务器B做后备，调试发布使用A，调试A的时候B就顶上前台！</p><p>这样，调试和正常部署网络服务两不误。是不是感觉自己是个大聪明！</p></blockquote><h2 id="系列教程"><a href="#系列教程" class="headerlink" title="系列教程"></a><strong>系列教程</strong></h2><p><a href="https://blog.17lai.site/atom.xml">全部文章RSS订阅</a></p><h3 id="Hexo系列"><a href="#Hexo系列" class="headerlink" title="Hexo系列"></a><strong>Hexo系列</strong></h3><p><a href="https://blog.17lai.site/categories/hexo/atom.xml"><strong>HexoRSS分类订阅</strong></a></p><p>[三万字教程]基于Hexo的matery主题搭建博客并深度优化完全一站式教程</p><ul><li><a href="https://blog.17lai.site/posts/40300608/">Hexo Docker环境与Hexo基础配置篇</a></li><li><a href="https://blog.17lai.site/posts/4d8a0b22/">hexo博客自定义修改篇</a></li><li><a href="https://blog.17lai.site/posts/9b056c86/">hexo博客网络优化篇</a></li><li><a href="https://blog.17lai.site/posts/5311b619/">hexo博客增强部署篇</a></li><li><a href="https://blog.17lai.site/posts/4a2050e2/">hexo博客个性定制篇</a></li><li><a href="https://blog.17lai.site/posts/84b4059a/">hexo博客常见问题篇</a></li><li><a href="https://blog.17lai.site/posts/253706ff/">hexo博客博文撰写篇之完美笔记大攻略终极完全版</a></li><li><a href="https://blog.17lai.site/posts/cf0f47fd/">Hexo Markdown以及各种插件功能测试</a></li></ul><blockquote><ul><li>markdown 各种其它语法插件，latex公式支持，mermaid图表，plant uml图表，URL卡片，bilibili卡片，github卡片，豆瓣卡片，插入音乐和视频，插入脑图，插入PDF，嵌入iframe</li></ul></blockquote><ul><li><a href="https://blog.17lai.site/posts/217ccdc1/">在 Hexo 博客中插入 ECharts 动态图表</a></li><li><a href="https://blog.17lai.site/posts/546887ac/">使用nodeppt给hexo博客嵌入PPT演示</a></li><li><a href="https://blog.17lai.site/posts/e922fac8/">Vercel部署高级用法教程</a></li></ul><h3 id="笔记系列"><a href="#笔记系列" class="headerlink" title="笔记系列"></a><strong>笔记系列</strong></h3><p><a href="https://blog.17lai.site/categories/note/atom.xml"><strong>Note分类RSS订阅</strong></a></p><ul><li><a href="https://blog.17lai.site/posts/a8535f26/">完美笔记进化论</a></li><li><a href="https://blog.17lai.site/posts/253706ff/">hexo博客博文撰写篇之完美笔记大攻略终极完全版</a></li><li><a href="https://blog.17lai.site/posts/e6086437/">Joplin入门指南&amp;实践方案</a></li><li><a href="https://blog.17lai.site/posts/45f878cd/">替代Evernote免费开源笔记Joplin-网盘同步笔记历史版本Markdown可视化</a></li><li><a href="https://blog.17lai.site/posts/92d347d6/">Joplin 插件以及其Markdown语法。All in One!</a></li><li><a href="https://blog.17lai.site/posts/e3ee7f8b/">Joplin 插件使用推荐</a></li><li><a href="https://blog.17lai.site/posts/1802a8a7/">为知笔记私有化Docker部署</a></li></ul><h3 id="Gitbook使用系列"><a href="#Gitbook使用系列" class="headerlink" title="Gitbook使用系列"></a><strong>Gitbook使用系列</strong></h3><p><a href="https://blog.17lai.site/categories/gitbook/atom.xml">Gitbook分类RSS订阅</a></p><ul><li><a href="https://blog.17lai.site/posts/7fe86002/">GitBook+GitLab撰写发布技术文档-Part1:GitBook篇</a></li><li><a href="https://blog.17lai.site/posts/7790e989/">GitBook+GitLab撰写发布技术文档-Part2:GitLab篇</a></li><li><a href="https://blog.17lai.site/posts/d6bad1e5/">自己动手制作电子书的最佳方式（支持PDF、ePub、mobi等格式）</a></li></ul><h3 id="Gitlab-使用系列"><a href="#Gitlab-使用系列" class="headerlink" title="Gitlab 使用系列"></a><strong>Gitlab 使用系列</strong></h3><p><a href="https://blog.17lai.site/categories/gitlab/atom.xml"><strong>Gitlab RSS 分类订阅</strong></a></p><ul><li><a href="https://blog.17lai.site/posts/acc13b70/"><strong>Gitlab的安装及使用教程完全版</strong></a></li><li><a href="https://blog.17lai.site/posts/29a820b3/">破解Gitlab EE</a></li><li><a href="https://blog.17lai.site/posts/d08eb7b/">Gitlab的安装及使用</a></li><li><a href="https://blog.17lai.site/posts/1879721e/">CI&#x2F;CD与Git Flow与GitLab</a></li></ul><p>来源: 夜法之书</p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Anaconda安装教程</title>
      <link href="/2022/09/28/anaconda-an-zhuang-jiao-cheng/"/>
      <url>/2022/09/28/anaconda-an-zhuang-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<h1 id="Anaconda软件安装流程"><a href="#Anaconda软件安装流程" class="headerlink" title="Anaconda软件安装流程"></a>Anaconda软件安装流程</h1><p><strong>（这是一份针对0基础初学者的教程）</strong></p><p><strong>update：2022.03.11</strong></p><p>在人工智能实践中，我们可能常常会用到基于Python的集成开发环境——Anaconda。下面我们就简单介绍一下Anaconda和相关软件的安装流程。</p><p><strong>请注意:</strong></p><blockquote><p><strong>为了和其他软件更好的兼容,并不建议“追星（新）”：安装Python3.8比较妥当（如下图所示即可）。</strong><br><strong>清华镜像提供了所有版本的下载：</strong></p></blockquote><p><a href="https://link.zhihu.com/?target=https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/">Index of &#x2F;anaconda&#x2F;archive&#x2F; | 清华大学开源软件镜像站 | Tsinghua Open Source Mirrormirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;archive&#x2F;<img src="https://pic2.zhimg.com/v2-a499da38f64f022186b52926258c5b5d_ipico.jpg" alt="img"></a></p><p><img src="https://pic4.zhimg.com/80/v2-ddef1aa2e7755fc10ebe324f44ba6c9b_720w.jpg" alt="img"></p><p>下面的安装流程主要来自官方文档(部分为英文).</p><h2 id="一、Linux环境下的Anaconda下载与安装"><a href="#一、Linux环境下的Anaconda下载与安装" class="headerlink" title="一、Linux环境下的Anaconda下载与安装"></a>一、Linux环境下的Anaconda下载与安装</h2><p>首先，在浏览器中访问Anaconda的官网（<a href="https://link.zhihu.com/?target=https://www.anaconda.com/products/individual">Anaconda | Individual Edition</a>)，单击下载Anaconda的Python 3.8版本，64-Bit（x86），选择当前操作系统适用的版本，这里以选择Linux版本为例来说明安装过程，如图3-7所示。<a href="https://link.zhihu.com/?target=https://www.anaconda.com/">Anaconda | The World’s Most Popular Data Science Platform</a>，单击下载Anaconda的Python 3.8版本，64-Bit（x86），选择当前操作系统适用的版本，这里以选择Linux版本为例来说明安装过程，如图3-7所示。</p><p><img src="https://pic4.zhimg.com/80/v2-5e1b2b775101efbc836268e3a7701537_720w.jpg" alt="img"></p><p>图3-7 Anaconda的下载界面</p><p>系统自动检测你的操作系统，如果你不是你下载的版本，可自主选择对应操作系统的图标</p><p><img src="https://pic1.zhimg.com/80/v2-c668849417268a1f296489d6fe0b8a40_720w.jpg" alt="img"></p><p>若不指定下载路径，则下载完毕后，Anaconda的下载文件将默认保存在用户的家目录下的“Download”文件夹中（家目录的路径为：&#x2F;home&#x2F;username，此处username为用户名，不同用户这个名称是不同的）。通常，我们用波浪号“～”代替具体的家目录，在终端，我们可以用“ls”命令查看下载的文件。</p><blockquote><p>$ <strong>ls</strong><br>Anaconda3-2021.05-Linux-x86_64.sh</p></blockquote><p>其中，Anaconda3-2021.05-Linux-x86_64.sh就是我们需要安装的文件（下载时间段不同，文件名会稍有不同）。从文件的后缀名“.sh”可以看出，这是一个shell文件。运行这类文件，通常需要bash（一个为GNU计划编写的UNIX shell）来解释执行，其代码如下。</p><blockquote><p><strong>bash</strong> ～&#x2F;Downloads&#x2F;Anaconda3-2021.05-Linux-x86_64.sh</p></blockquote><p>在安装过程中，需要按回车键（Enter）来阅读并确认同意Anaconda的服务条款，该过程中还要手动输入“yes”，明确表示同意该条款之后，Anaconda才能正式进入安装过程。</p><p>Anaconda的默认安装路径是“&#x2F;home&#x2F;<username>&#x2F;anaconda3”。这里的<username>表示用户名，不同的Linux用户名，安装路径稍有不同。</p><p>在安装尾声，程序会询问是否通过conda来初始化Anaconda 3，实际上就是将Anaconda的环境变量导入到PATH中，输入“yes”。这样一来，以后就可以直接在终端使用诸如ipython、spyder等命令了（这些好用的命令，均来自Anaconda环境）。</p><p>最后，当屏幕输出“Thank you for installing Anaconda 3!”字样时，就表明Anaconda安装完毕了。macOS版本的Anaconda与Linux版本的Anaconda的安装流程类似，这里不再赘述。</p><p>由于Windows发行版用户量较大，因此下面对Windows发行版的Anaconda安装过程，也给予简单介绍。</p><h2 id="二、Windows环境下的Anaconda下载与安装"><a href="#二、Windows环境下的Anaconda下载与安装" class="headerlink" title="二、Windows环境下的Anaconda下载与安装"></a>二、Windows环境下的Anaconda下载与安装</h2><p>下面我们简单介绍一下在Windows系统如何安装Anaconda。在图3-8所示的下载界面中，选择Windows版本，下载与自己所用操作系统位数相适配的发行版。</p><p><img src="https://pic1.zhimg.com/80/v2-f3432e2f2c69e3a1423d5fd3ea587a8c_720w.jpg" alt="img"></p><p><img src="https://pic1.zhimg.com/80/v2-d9b08b17f28e0d8b9e77ff954e8996c0_720w.jpg" alt="img"></p><p>图3-8 Anaconda的同意协议与条款</p><p>若用户使用的操作系统是64位的，则选择下载“64-Bit Graphical Installer”；否则，下载“32-Bit Graphical Installer”。假设我们下载的是64位的Anaconda安装包，待下载完毕后，双击已下载的安装包“Anaconda3-2021.05-Windows-x86_64.exe”，即可进入安装流程。对Anaconda的条款单击“I Agree”按钮，进入下一步，如图3-8所示。</p><p>若用户安装Anaconda的目的仅是为自己服务，则选择“Just Me”选项。若用户想让Anaconda可以为当前计算机的所有用户服务，则选择“All Users”选项，这时操作系统会请求管理员权限。选择完毕后，单击“Next&gt;”按钮，进入正式安装程序，如图3-9所示。</p><p><img src="https://pic1.zhimg.com/80/v2-dca2dbb01d9fb6a6e58e33a3e2585014_720w.jpg" alt="img"></p><p>图3-9 选择适用的用户范围</p><p>需要注意的是，若Anaconda的默认目录中（如C:\Users\yhily \ Anaconda3）事先安装有Anaconda的早期版本，或者说，同名的Anaconda文件夹不为空，则无法进行安装。</p><p>这时解决的方法通常有两个：一是手动删除旧的安装目录，保障目前Anaconda安装路径的“纯洁性”；二是选择不同的安装目录。</p><p>此外，还需要注意的是，安装路径一定<strong>不能有空格或中文字符</strong>，因为Anaconda暂时不支持间断性（含有空格）的安装路径和Unicode编码。在解决Anaconda安装路径的问题后，即可进入如图3-10所示的界面。</p><p><img src="https://pic4.zhimg.com/80/v2-e906aaba8dfb293ef63139512c501c7b_720w.jpg" alt="img"></p><p>图3-10 安装时的高级选项</p><p>在图3-10中，建议初学者将两个选项都选上。第一个选项说的是，<strong>将Anaconda的路径设置到系统的PATH环境变量中。这很重要，这个设置会给用户提供很多方便，如用户可以在任意命令行路径下启动Python或使用conda命令</strong>。</p><p>第二个选项说得是，选择Anaconda作为默认的Python编译器。这个选项会令诸如PyCharm、Wing等IDE开发环境自动检测Anaconda的存在。</p><p>然后单击“Install（安装）”按钮，正式进入安装流程。再不断单击“Next&gt;”（下一步）按钮，即可进入如图3-11所示的界面。一旦出现该界面，那么恭喜你，Anaconda已经成功安装。</p><p>由于后续章节的代码都是在Python环境下开发完成的，下面我们就来测试一下，Anaconda是否成功安装了Python。</p><p><img src="https://pic2.zhimg.com/80/v2-2bfbed527a70acff10dd4f4b14949cbd_720w.jpg" alt="img"></p><p>图3-11 成功安装Anaconda</p><h2 id="三、在conda平台安装其他软件包"><a href="#三、在conda平台安装其他软件包" class="headerlink" title="三、在conda平台安装其他软件包"></a>三、在conda平台安装其他软件包</h2><p>在Windows系统中，在“开始””命令框”中输入cmd，打开终端（或win键+R）。</p><p><img src="https://pic2.zhimg.com/80/v2-def5afbf66c80c87f4bc848a88c355c5_720w.jpg" alt="img"></p><h2 id="四、更新软件下载渠道"><a href="#四、更新软件下载渠道" class="headerlink" title="四、更新软件下载渠道"></a>四、更新软件下载渠道</h2><p>Anaconda的官方渠道，对中国用户来说下载较慢，建议使用清华的软件源。</p><p>在cmd终端，分别输入如下三行命令：</p><blockquote><p>conda config –add channels <a href="https://link.zhihu.com/?target=https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/">https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</a><br>conda config –add channels <a href="https://link.zhihu.com/?target=https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/">https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</a></p></blockquote><p>conda config –set show_channel_urls yes</p><h2 id="五、下载软件包（非必需！）"><a href="#五、下载软件包（非必需！）" class="headerlink" title="五、下载软件包（非必需！）"></a>五、下载软件包（非必需！）</h2><p>目前主要安装的软件分别如下（在命令行分别输入如下命令）</p><ol><li>scikit-learn (开源机器学习库) ，<strong>这个库Anaconda是默认安装的（通常无需二次安装！）</strong>。如果你是单独下载的Python，而没有安装sk-learn，可以使用下列命令安装。</li></ol><blockquote><p>conda install scikit-learn</p></blockquote><p>安装过程中，输入y，表示同意安装，或者直接点击回车。</p><p><img src="https://pic2.zhimg.com/80/v2-500694b8d5492fb67718b2979397f251_720w.jpg" alt="img"></p><p>\2. 安装TensorFlow (深度学习库)</p><blockquote><p>conda install tensorflow</p></blockquote><p>3.安装PyTorch(深度学习)</p><blockquote><p>conda install pytorch torchvision torchaudio cpuonly -c pytorch</p></blockquote><p>在PyTorch官网（<a href="https://link.zhihu.com/?target=https://pytorch.org/">https://pytorch.org/</a>），提供了安装指令的说明（不同的系统，不同的安装器，是否支持GPU，安装指令稍有不同），如下图所示。</p><p><img src="https://pic3.zhimg.com/80/v2-342688fd33e9f5482d3052e5979746e2_720w.jpg" alt="img"></p><p>安装过程中，采坑可能是必然的。但每次填坑都是一次学习的机会。</p><p>祝大家安装顺利！</p><h2 id="六、打开Jupyter"><a href="#六、打开Jupyter" class="headerlink" title="六、打开Jupyter"></a>六、打开Jupyter</h2><p>Jupyter是我们常用的编程环境。下面我们介绍如何打开它。</p><h3 id="6-1-Mac或Linux环境"><a href="#6-1-Mac或Linux环境" class="headerlink" title="6.1 Mac或Linux环境"></a>6.1 Mac或Linux环境</h3><p>在终端输入如下命令：</p><blockquote><p>jupyter notebook</p></blockquote><p><strong>注意：</strong>所有命令都是小写。</p><p>过一会Jupyter会自动启动一个默认浏览器的终端</p><p><img src="https://pic3.zhimg.com/80/v2-8b5846b805c5d85462444ed659132592_720w.jpg" alt="img"></p><h3 id="6-2-Windows环境"><a href="#6-2-Windows环境" class="headerlink" title="6.2 Windows环境"></a>6.2 Windows环境</h3><p>（1）在Windows系统中，在“开始””命令框”中输入cmd，打开终端（或者Win键+R快捷键），输入命令：</p><blockquote><p>jupyter notebook</p></blockquote><p><strong>注意：这是Jupyter后台服务进程，运行期间，不要关闭该终端窗口（Linux&#x2F;Mac同）</strong></p><p><img src="https://pic2.zhimg.com/80/v2-22f69ac1d5242e38d360e0ab17190f89_720w.jpg" alt="img"></p><p>然后，在默认浏览器中，会打开一个页面，显示Jupyter的窗口。</p><p><img src="https://pic4.zhimg.com/80/v2-2593170acf73b66ac8bb0ececef60b8f_720w.jpg" alt="img"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo matery主题安装介绍</title>
      <link href="/2022/09/28/hexo-matery-zhu-ti-an-zhuang-jie-shao/"/>
      <url>/2022/09/28/hexo-matery-zhu-ti-an-zhuang-jie-shao/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-theme-matery"><a href="#hexo-theme-matery" class="headerlink" title="hexo-theme-matery"></a>hexo-theme-matery</h1><p>QQ 交流群1（已满）: <a href="https://jq.qq.com/?_wv=1027&k=5zMDYHT"><code>926552981</code></a> | QQ 交流群2（已满）: <a href="https://jq.qq.com/?_wv=1027&k=53q2Ayp"><code>971887688</code></a> | QQ 交流群3（推荐）: <a href="https://qm.qq.com/cgi-bin/qm/qr?k=fC1-kU-_aTn4q-JQq4GsYKr4WcKdgfGa&jump_from=webapi"><code>670694035</code></a></p><blockquote><p>这是一个采用 <code>Material Design</code> 和响应式设计的 Hexo 博客主题。</p></blockquote><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul><li>简单漂亮，文章内容美观易读</li><li><a href="https://material.io/">Material Design</a> 设计</li><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li>首页轮播文章及每天动态切换 <code>Banner</code> 图片</li><li>瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</li><li>时间轴式的归档页</li><li><strong>词云</strong>的标签页和<strong>雷达图</strong>的分类页</li><li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li>可自定义的数据的友情链接页面</li><li>支持文章置顶和文章打赏</li><li>支持 <code>MathJax</code></li><li><code>TOC</code> 目录</li><li>可设置复制文章内容时追加版权信息</li><li>可设置阅读文章时做密码验证</li><li><a href="https://gitalk.github.io/">Gitalk</a>、<a href="https://imsun.github.io/gitment/">Gitment</a>、<a href="https://valine.js.org/">Valine</a> 和 <a href="https://disqus.com/">Disqus</a> 评论模块（推荐使用 <code>Gitalk</code>）</li><li>集成了<a href="http://busuanzi.ibruce.info/">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</li><li>支持在首页的音乐播放和视频播放功能</li><li>支持<code>emoji</code>表情，用<code>markdown emoji</code>语法书写直接生成对应的能<strong>跳跃</strong>的表情。</li><li>支持 <a href="http://www.daovoice.io/">DaoVoice</a>、<a href="https://www.tidio.com/">Tidio</a> 在线聊天功能。</li></ul><h2 id="贡献者"><a href="#贡献者" class="headerlink" title="贡献者"></a>贡献者</h2><p>感谢下面列出的贡献者，没有他们，hexo-theme-matery 不会这么完美。</p><ul><li><a href="https://github.com/HarborZeng">@HarborZeng</a></li><li><a href="https://github.com/shw2018">@shw2018</a></li><li><a href="https://github.com/L1cardo">@L1cardo</a></li><li><a href="https://github.com/Five-great">@Five-great</a></li></ul><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>本主题<strong>推荐你使用 Hexo 5.0.0 及以上的版本</strong>。如果，你已经有一个自己的 <a href="https://hexo.io/zh-cn/">Hexo</a> 博客了，建议你将 Hexo 升级到最新稳定的版本。</p><p>点击 <a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master">这里</a> 下载 <code>master</code> 分支的最新稳定版的代码，解压缩后，将 <code>hexo-theme-matery</code> 的文件夹复制到你 Hexo 的 <code>themes</code> 文件夹中即可。</p><p>当然你也可以在你的 <code>themes</code> 文件夹下使用 <code>git clone</code> 命令来下载:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/blinkfox/hexo-theme-matery.git</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h3><p>修改 Hexo 根目录下的 <code>_config.yml</code> 的  <code>theme</code> 的值：<code>theme: hexo-theme-matery</code></p><h4 id="config-yml-文件的其它修改建议"><a href="#config-yml-文件的其它修改建议" class="headerlink" title="_config.yml 文件的其它修改建议:"></a><code>_config.yml</code> 文件的其它修改建议:</h4><ul><li>请修改 <code>_config.yml</code> 的 <code>url</code> 的值为你的网站主 <code>URL</code>（如：<code>http://xxx.github.io</code>）。</li><li>建议修改两个 <code>per_page</code> 的分页条数值为 <code>6</code> 的倍数，如：<code>12</code>、<code>18</code> 等，这样文章列表在各个屏幕下都能较好的显示。</li><li>如果你是中文用户，则建议修改 <code>language</code> 的值为 <code>zh-CN</code>。</li></ul><h3 id="新建分类-categories-页"><a href="#新建分类-categories-页" class="headerlink" title="新建分类 categories 页"></a>新建分类 categories 页</h3><p><code>categories</code> 页是用来展示所有分类的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;categories&quot;</span></span><br></pre></td></tr></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-09-30 17:25:30</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;categories&quot;</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">&quot;categories&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h3 id="新建标签-tags-页"><a href="#新建标签-tags-页" class="headerlink" title="新建标签 tags 页"></a>新建标签 tags 页</h3><p><code>tags</code> 页是用来展示所有标签的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;tags&quot;</span></span><br></pre></td></tr></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-09-30 18:23:38</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;tags&quot;</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">&quot;tags&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h3 id="新建关于我-about-页"><a href="#新建关于我-about-页" class="headerlink" title="新建关于我 about 页"></a>新建关于我 about 页</h3><p><code>about</code> 页是用来展示<strong>关于我和我的博客</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;about&quot;</span></span><br></pre></td></tr></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">about</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-09-30 17:25:30</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;about&quot;</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">&quot;about&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h3 id="新建留言板-contact-页（可选的）"><a href="#新建留言板-contact-页（可选的）" class="headerlink" title="新建留言板 contact 页（可选的）"></a>新建留言板 contact 页（可选的）</h3><p><code>contact</code> 页是用来展示<strong>留言板</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>contact/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;contact&quot;</span></span><br></pre></td></tr></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/contact/index.md</code>，至少需要以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">contact</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-09-30 17:25:30</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;contact&quot;</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">&quot;contact&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>注</strong>：本留言板功能依赖于第三方评论系统，请<strong>激活</strong>你的评论系统才有效果。并且在主题的 <code>_config.yml</code> 文件中，第 <code>19</code> 至 <code>21</code> 行的“<strong>菜单</strong>”配置，取消关于留言板的注释即可。</p></blockquote><h3 id="新建友情链接-friends-页（可选的）"><a href="#新建友情链接-friends-页（可选的）" class="headerlink" title="新建友情链接 friends 页（可选的）"></a>新建友情链接 friends 页（可选的）</h3><p><code>friends</code> 页是用来展示<strong>友情链接</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;friends&quot;</span></span><br></pre></td></tr></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/friends/index.md</code>，至少需要以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">friends</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-12-12 21:25:30</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;friends&quot;</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">&quot;friends&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>同时，在你的博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，文件内容如下所示：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://image.luokangyuan.com/1_qq_27922023.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;码酱&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;introduction&quot;</span><span class="punctuation">:</span> <span class="string">&quot;我不是大佬，只是在追寻大佬的脚步&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://luokangyuan.com/&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;前去学习&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://image.luokangyuan.com/4027734.jpeg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;闪烁之狐&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;introduction&quot;</span><span class="punctuation">:</span> <span class="string">&quot;编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://blinkfox.github.io/&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;前去学习&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://image.luokangyuan.com/avatar.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ja_rome&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;introduction&quot;</span><span class="punctuation">:</span> <span class="string">&quot;平凡的脚步也可以走出伟大的行程&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://me.csdn.net/jlh912008548&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;前去学习&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><h3 id="新建-404-页"><a href="#新建-404-页" class="headerlink" title="新建 404 页"></a>新建 404 页</h3><p>如果在你的博客 <code>source</code> 目录下还没有 <code>404.md</code> 文件，那么你就需要新建一个</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page 404</span><br></pre></td></tr></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/404/index.md</code>，至少需要以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="number">404</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-09-30 17:25:30</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;404&quot;</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">&quot;404&quot;</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&quot;Oops～，我崩溃了！找不到你想要的页面 :(&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h3 id="菜单导航配置"><a href="#菜单导航配置" class="headerlink" title="菜单导航配置"></a>菜单导航配置</h3><h4 id="配置基本菜单导航的名称、路径url和图标icon"><a href="#配置基本菜单导航的名称、路径url和图标icon" class="headerlink" title="配置基本菜单导航的名称、路径url和图标icon."></a>配置基本菜单导航的名称、路径url和图标icon.</h4><p>1.菜单导航名称可以是中文也可以是英文(如：<code>Index</code>或<code>主页</code>)<br>2.图标icon 可以在<a href="https://fontawesome.com/icons">Font Awesome</a> 中查找   </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">Index:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">Tags:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/tags</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">Categories:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/categories</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-bookmark</span></span><br><span class="line">  <span class="attr">Archives:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/archives</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="attr">About:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/about</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-user-circle</span></span><br><span class="line">  <span class="attr">Friends:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/friends</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-address-book</span></span><br></pre></td></tr></table></figure><h4 id="二级菜单配置方法"><a href="#二级菜单配置方法" class="headerlink" title="二级菜单配置方法"></a>二级菜单配置方法</h4><p>如果你需要二级菜单则可以在原基本菜单导航的基础上如下操作</p><ol><li>在需要添加二级菜单的一级菜单下添加<code>children</code>关键字(如:<code>About</code>菜单下添加<code>children</code>)     </li><li>在<code>children</code>下创建二级菜单的 名称name,路径url和图标icon.      </li><li>注意每个二级菜单模块前要加 <code>-</code>.     </li><li>注意缩进格式</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">Index:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">Tags:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/tags</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">Categories:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/categories</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-bookmark</span></span><br><span class="line">  <span class="attr">Archives:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/archives</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="attr">About:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/about</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-user-circle-o</span></span><br><span class="line">  <span class="attr">Friends:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/friends</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-address-book</span></span><br><span class="line">  <span class="attr">Medias:</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-list</span></span><br><span class="line">    <span class="attr">children:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Music</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">/music</span></span><br><span class="line">        <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-music</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Movies</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">/movies</span></span><br><span class="line">        <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-film</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Books</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">/books</span></span><br><span class="line">        <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-book</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Galleries</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">/galleries</span></span><br><span class="line">        <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-image</span></span><br></pre></td></tr></table></figure><h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><p>从 Hexo5.0 版本开始自带了 <code>prismjs</code> 代码语法高亮的支持，本主题对此进行了改造支持。</p><p>如果你的博客中曾经安装过 <code>hexo-prism-plugin</code> 的插件，那么你须要执行 <code>npm uninstall hexo-prism-plugin</code> 来卸载掉它，否则生成的代码中会有 <code>&amp;#123;</code> 和 <code>&amp;#125;</code> 的转义字符。</p><p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并将 <code>prismjs.enable</code> 的值设置为 <code>true</code>，主要配置如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hljs:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">prismjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">preprocess:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>主题中默认的 <code>prismjs</code> 主题是 <code>Tomorrow Night</code>，如果你想定制自己的主题，可以前往 <a href="https://prismjs.com/download.html">prismjs 下载页面</a> 定制下载自己喜欢的主题 <code>css</code> 文件，然后将此 css 主题文件取名为 <code>prism.css</code>，替换掉 <code>hexo-theme-matery</code> 主题文件夹中的 <code>source/libs/prism/prism.css</code> 文件即可。</p><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><p>本主题中还使用到了 <a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br></pre></td></tr></table></figure><h3 id="中文链接转拼音（建议安装）"><a href="#中文链接转拼音（建议安装）" class="headerlink" title="中文链接转拼音（建议安装）"></a>中文链接转拼音（建议安装）</h3><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>安装命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-permalink-pinyin --save</span><br></pre></td></tr></table></figure><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink_pinyin:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">separator:</span> <span class="string">&#x27;-&#x27;</span> <span class="comment"># default: &#x27;-&#x27;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>注</strong>：除了此插件外，<a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a> 插件也可以生成非中文的链接。</p></blockquote><h3 id="文章字数统计插件（建议安装）"><a href="#文章字数统计插件（建议安装）" class="headerlink" title="文章字数统计插件（建议安装）"></a>文章字数统计插件（建议安装）</h3><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href="https://github.com/willin/hexo-wordcount">hexo-wordcount</a>插件。</p><p>安装命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i --save hexo-wordcount</span><br></pre></td></tr></table></figure><p>然后只需在本主题下的 <code>_config.yml</code> 文件中，将各个文章字数相关的配置激活即可：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">postInfo:</span></span><br><span class="line">  <span class="attr">date:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">update:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">wordCount:</span> <span class="literal">false</span> <span class="comment"># 设置文章字数统计为 true.</span></span><br><span class="line">  <span class="attr">totalCount:</span> <span class="literal">false</span> <span class="comment"># 设置站点文章总字数统计为 true.</span></span><br><span class="line">  <span class="attr">min2read:</span> <span class="literal">false</span> <span class="comment"># 阅读时长.</span></span><br><span class="line">  <span class="attr">readCount:</span> <span class="literal">false</span> <span class="comment"># 阅读次数.</span></span><br></pre></td></tr></table></figure><h3 id="添加emoji表情支持（可选的）"><a href="#添加emoji表情支持（可选的）" class="headerlink" title="添加emoji表情支持（可选的）"></a>添加emoji表情支持（可选的）</h3><p>本主题新增了对<code>emoji</code>表情的支持，使用到了 <a href="https://npm.taobao.org/package/hexo-filter-github-emojis">hexo-filter-github-emojis</a> 的 Hexo 插件来支持 <code>emoji</code>表情的生成，把对应的<code>markdown emoji</code>语法（<code>::</code>,例如：<code>:smile:</code>）转变成会跳跃的<code>emoji</code>表情，安装命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-filter-github-emojis --save</span><br></pre></td></tr></table></figure><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">githubEmojis:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">className:</span> <span class="string">github-emoji</span></span><br><span class="line">  <span class="attr">inject:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">styles:</span></span><br><span class="line">  <span class="attr">customEmojis:</span></span><br></pre></td></tr></table></figure><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后就可以在文章中对应位置看到你用<code>emoji</code>语法写的表情了。</p><h3 id="添加-RSS-订阅支持（可选的）"><a href="#添加-RSS-订阅支持（可选的）" class="headerlink" title="添加 RSS 订阅支持（可选的）"></a>添加 RSS 订阅支持（可选的）</h3><p>本主题中还使用到了 <a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a> 的 Hexo 插件来做 <code>RSS</code>，安装命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">20</span></span><br><span class="line">  <span class="attr">hub:</span></span><br><span class="line">  <span class="attr">content:</span></span><br><span class="line">  <span class="attr">content_limit:</span> <span class="number">140</span></span><br><span class="line">  <span class="attr">content_limit_delim:</span> <span class="string">&#x27; &#x27;</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br></pre></td></tr></table></figure><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p><h3 id="添加-DaoVoice-在线聊天功能（可选的）"><a href="#添加-DaoVoice-在线聊天功能（可选的）" class="headerlink" title="添加 DaoVoice 在线聊天功能（可选的）"></a>添加 <a href="http://www.daovoice.io/">DaoVoice</a> 在线聊天功能（可选的）</h3><p>前往 <a href="http://www.daovoice.io/">DaoVoice</a> 官网注册并且获取 <code>app_id</code>，并将 <code>app_id</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h3 id="添加-Tidio-在线聊天功能（可选的）"><a href="#添加-Tidio-在线聊天功能（可选的）" class="headerlink" title="添加 Tidio 在线聊天功能（可选的）"></a>添加 <a href="https://www.tidio.com/">Tidio</a> 在线聊天功能（可选的）</h3><p>前往 <a href="https://www.tidio.com/">Tidio</a> 官网注册并且获取 <code>Public Key</code>，并将 <code>Public Key</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h3 id="修改页脚"><a href="#修改页脚" class="headerlink" title="修改页脚"></a>修改页脚</h3><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 <code>/layout/_partial/footer.ejs</code> 文件中，包括站点、使用的主题、访问量等。</p><h3 id="修改社交链接"><a href="#修改社交链接" class="headerlink" title="修改社交链接"></a>修改社交链接</h3><p>在主题的 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>、<code>GitHub</code> 和邮箱等的配置，你可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (theme.socialLink.github) &#123; %&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&lt;%= theme.socialLink.github %&gt;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;tooltipped&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">data-tooltip</span>=<span class="string">&quot;访问我的GitHub&quot;</span> <span class="attr">data-position</span>=<span class="string">&quot;top&quot;</span> <span class="attr">data-delay</span>=<span class="string">&quot;50&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fab fa-github&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>其中，社交图标（如：<code>fa-github</code>）你可以在 <a href="https://fontawesome.com/icons">Font Awesome</a> 中搜索找到。以下是常用社交图标的标识，供你参考：</p><ul><li>Facebook: <code>fab fa-facebook</code></li><li>Twitter: <code>fab fa-twitter</code></li><li>Google-plus: <code>fab fa-google-plus</code></li><li>Linkedin: <code>fab fa-linkedin</code></li><li>Tumblr: <code>fab fa-tumblr</code></li><li>Medium: <code>fab fa-medium</code></li><li>Slack: <code>fab fa-slack</code></li><li>Sina Weibo: <code>fab fa-weibo</code></li><li>Wechat: <code>fab fa-weixin</code></li><li>QQ: <code>fab fa-qq</code></li><li>Zhihu: <code>fab fa-zhihu</code></li></ul><blockquote><p><strong>注意</strong>: 本主题中使用的 <code>Font Awesome</code> 版本为 <code>5.11.0</code>。</p></blockquote><h3 id="修改打赏的二维码图片"><a href="#修改打赏的二维码图片" class="headerlink" title="修改打赏的二维码图片"></a>修改打赏的二维码图片</h3><p>在主题文件的 <code>source/medias/reward</code> 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。</p><h3 id="配置音乐播放器（可选的）"><a href="#配置音乐播放器（可选的）" class="headerlink" title="配置音乐播放器（可选的）"></a>配置音乐播放器（可选的）</h3><p>要支持音乐播放，在主题的 <code>_config.yml</code> 配置文件中激活music配置即可：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 是否在首页显示音乐</span></span><br><span class="line"><span class="attr">music:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">title:</span>         <span class="comment"># 非吸底模式有效</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">show:</span> <span class="string">听听音乐</span></span><br><span class="line">  <span class="attr">server:</span> <span class="string">netease</span>   <span class="comment"># require music platform: netease, tencent, kugou, xiami, baidu</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">playlist</span>    <span class="comment"># require song, playlist, album, search, artist</span></span><br><span class="line">  <span class="attr">id:</span> <span class="number">503838841</span>     <span class="comment"># require song id / playlist id / album id / search keyword</span></span><br><span class="line">  <span class="attr">fixed:</span> <span class="literal">false</span>      <span class="comment"># 开启吸底模式</span></span><br><span class="line">  <span class="attr">autoplay:</span> <span class="literal">false</span>   <span class="comment"># 是否自动播放</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">&#x27;#42b983&#x27;</span></span><br><span class="line">  <span class="attr">loop:</span> <span class="string">&#x27;all&#x27;</span>       <span class="comment"># 音频循环播放, 可选值: &#x27;all&#x27;, &#x27;one&#x27;, &#x27;none&#x27;</span></span><br><span class="line">  <span class="attr">order:</span> <span class="string">&#x27;random&#x27;</span>   <span class="comment"># 音频循环顺序, 可选值: &#x27;list&#x27;, &#x27;random&#x27;</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="string">&#x27;auto&#x27;</span>   <span class="comment"># 预加载，可选值: &#x27;none&#x27;, &#x27;metadata&#x27;, &#x27;auto&#x27;</span></span><br><span class="line">  <span class="attr">volume:</span> <span class="number">0.7</span>       <span class="comment"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span></span><br><span class="line">  <span class="attr">listFolded:</span> <span class="literal">true</span>  <span class="comment"># 列表默认折叠</span></span><br></pre></td></tr></table></figure><blockquote><p><code>server</code>可选<code>netease</code>（网易云音乐），<code>tencent</code>（QQ音乐），<code>kugou</code>（酷狗音乐），<code>xiami</code>（虾米音乐），</p><p><code>baidu</code>（百度音乐）。</p><p><code>type</code>可选<code>song</code>（歌曲），<code>playlist</code>（歌单），<code>album</code>（专辑），<code>search</code>（搜索关键字），<code>artist</code>（歌手）</p><p><code>id</code>获取方法示例: 浏览器打开网易云音乐，点击我喜欢的音乐歌单，浏览器地址栏后面会有一串数字，<code>playlist</code>的<code>id</code></p><p>即为这串数字。</p></blockquote><h3 id="添加note"><a href="#添加note" class="headerlink" title="添加note"></a>添加note</h3><blockquote><p><a href="https://blog.17lai.site/posts/cf0f47fd/#tag-note">演示</a></p></blockquote><h4 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note [class] [no-icon] [summary] %&#125;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><ul><li><code>[class]</code> : <em>Optional parameter.</em> Supported values: default | primary | success | info | warning | danger.</li><li><code>[no-icon]</code> : <em>Optional parameter.</em> Disable icon in note.</li><li><code>[summary]</code> : <em>Optional parameter.</em> Optional summary of the note.</li></ul><p>All parameters are optional.</p><h4 id="example"><a href="#example" class="headerlink" title="example"></a>example</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note %&#125;</span><br><span class="line">#### Header</span><br><span class="line">(without define class style)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><h3 id="添加button"><a href="#添加button" class="headerlink" title="添加button"></a>添加button</h3><blockquote><p><a href="https://blog.17lai.site/posts/cf0f47fd/#tag-button">演示</a></p></blockquote><h4 id="Usage-1"><a href="#Usage-1" class="headerlink" title="Usage"></a>Usage</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% button url, text, icon [class], [title] %&#125;</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btn url, text, icon [class], [title] %&#125;</span><br></pre></td></tr></table></figure><ul><li><code>url</code> : Absolute or relative path to URL.</li><li><code>text</code> : Button text. Required if no icon specified.</li><li><code>icon</code> : Font Awesome icon name. Required if no text specified.</li><li><code>[class]</code> : <em>Optional parameter.</em> Font Awesome class(es): <code>fa-fw</code> | <code>fa-lg</code> | <code>fa-2x</code> | <code>fa-3x</code> | <code>fa-4x</code> | <code>fa-5x</code></li><li><code>[title]</code> : <em>Optional parameter.</em> Tooltip at mouseover.</li></ul><h4 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% button #, Text %&#125;</span><br></pre></td></tr></table></figure><h2 id="文章-Front-matter-介绍"><a href="#文章-Front-matter-介绍" class="headerlink" title="文章 Front-matter 介绍"></a>文章 Front-matter 介绍</h2><h3 id="Front-matter-选项详解"><a href="#Front-matter-选项详解" class="headerlink" title="Front-matter 选项详解"></a>Front-matter 选项详解</h3><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code> 中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code> 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td>top</td><td><code>true</code></td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>hide</td><td><code>false</code></td><td>隐藏文章，如果<code>hide</code>值为<code>true</code>，则文章不会在首页显示</td></tr><tr><td>cover</td><td><code>false</code></td><td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td>toc</td><td><code>true</code></td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td>mathjax</td><td><code>false</code></td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>keywords</td><td>文章标题</td><td>文章关键字，SEO 时需要</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><blockquote><p><strong>注意</strong>:</p><ol><li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章的特色图<strong>各有特色</strong>。</li><li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li><li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：<a href="http://tool.oschina.net/encrypt?type=2">开源中国在线工具</a>、<a href="http://encode.chahuo.com/">chahuo</a>、<a href="http://tool.chinaz.com/tools/hash.aspx">站长工具</a>。</li><li>您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</li></ol></blockquote><p>以下为文章的 <code>Front-matter</code> 示例。</p><h3 id="最简示例"><a href="#最简示例" class="headerlink" title="最简示例"></a>最简示例</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">typora-vue-theme主题介绍</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-09-07 09:25:00</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h3 id="最全示例"><a href="#最全示例" class="headerlink" title="最全示例"></a>最全示例</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">typora-vue-theme主题介绍</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-09-07 09:25:00</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">赵奇</span></span><br><span class="line"><span class="attr">img:</span> <span class="string">/source/images/xxx.jpg</span></span><br><span class="line"><span class="attr">top:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">hide:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">cover:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">coverImg:</span> <span class="string">/images/1.jpg</span></span><br><span class="line"><span class="attr">password:</span> <span class="string">8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92</span></span><br><span class="line"><span class="attr">toc:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">mathjax:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">summary:</span> <span class="string">这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">Markdown</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Typora</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Markdown</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h2 id="效果截图"><a href="#效果截图" class="headerlink" title="效果截图"></a>效果截图</h2><p><img src="http://static.blinkfox.com/matery-20181202-1.png" alt="首页"></p><p><img src="http://static.blinkfox.com/matery-20181202-2.png" alt="首页推荐文章"></p><p><img src="http://static.blinkfox.com/matery-20181202-3.png" alt="首页文章列表"></p><p><img src="http://static.blinkfox.com/matery-20181202-7.png" alt="首页文章列表"></p><p><img src="http://static.blinkfox.com/matery-20181202-8.png" alt="首页文章列表"></p><h2 id="自定制修改"><a href="#自定制修改" class="headerlink" title="自定制修改"></a>自定制修改</h2><p>在本主题的 <code>_config.yml</code> 中可以修改部分自定义信息，有以下几个部分：</p><ul><li>菜单</li><li>我的梦想</li><li>首页的音乐播放器和视频播放器配置</li><li>是否显示推荐文章名称和按钮配置</li><li><code>favicon</code> 和 <code>Logo</code></li><li>个人信息</li><li>TOC 目录</li><li>文章打赏信息</li><li>复制文章内容时追加版权信息</li><li>MathJax</li><li>文章字数统计、阅读时长</li><li>点击页面的’爱心’效果</li><li>我的项目</li><li>我的技能</li><li>我的相册</li><li><code>Gitalk</code>、<code>Gitment</code>、<code>Valine</code> 和 <code>disqus</code> 评论配置</li><li><a href="http://busuanzi.ibruce.info/">不蒜子统计</a>和谷歌分析（<code>Google Analytics</code>）</li><li>默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 <code>hashcode</code> 值取余，来选择展示对应的特色图</li></ul><p><strong>我认为个人博客应该都有自己的风格和特色</strong>。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 <code>_config.yml</code> 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方：</p><h3 id="修改主题颜色"><a href="#修改主题颜色" class="headerlink" title="修改主题颜色"></a>修改主题颜色</h3><p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */</span></span><br><span class="line"><span class="selector-class">.bg-color</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to right, <span class="number">#4cbf30</span> <span class="number">0%</span>, <span class="number">#0f9d58</span> <span class="number">100%</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> rainbow &#123;</span><br><span class="line">   <span class="comment">/* 动态切换背景颜色. */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> rainbow &#123;</span><br><span class="line">    <span class="comment">/* 动态切换背景颜色. */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改-banner-图和文章特色图"><a href="#修改-banner-图和文章特色图" class="headerlink" title="修改 banner 图和文章特色图"></a>修改 banner 图和文章特色图</h3><p>你可以直接在 <code>/source/medias/banner</code> 文件夹中更换你喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 <code>7</code> 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;.bg-cover&#x27;</span>).<span class="title function_">css</span>(<span class="string">&#x27;background-image&#x27;</span>, <span class="string">&#x27;url(/medias/banner/&#x27;</span> + <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getDay</span>() + <span class="string">&#x27;.jpg)&#x27;</span>);</span><br></pre></td></tr></table></figure><p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p><h2 id="版本变更记录"><a href="#版本变更记录" class="headerlink" title="版本变更记录"></a>版本变更记录</h2><p>参见 <a href="https://github.com/blinkfox/hexo-theme-matery/blob/master/CHANGELOG.md">CHANGELOG.md</a></p><h2 id="更多部署方式"><a href="#更多部署方式" class="headerlink" title="更多部署方式"></a>更多部署方式</h2><blockquote><p>Jsdelivr 已经被封了，这两个可以加速访问快一点</p></blockquote><h3 id="vercel-部署"><a href="#vercel-部署" class="headerlink" title="vercel 部署"></a><a href="https://blog.17lai.site/posts/5311b619/#vercel-%E9%83%A8%E7%BD%B2">vercel 部署</a></h3><h3 id="cloudflare-Pages-部署"><a href="#cloudflare-Pages-部署" class="headerlink" title="cloudflare Pages 部署"></a><a href="https://blog.17lai.site/posts/5311b619/#cloudflare-Pages-%E9%83%A8%E7%BD%B2">cloudflare Pages 部署</a></h3>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/09/28/hello-world/"/>
      <url>/2022/09/28/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
